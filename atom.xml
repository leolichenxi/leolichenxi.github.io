<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CXGame</title>
  
  
  <link href="https://leolichenxi.github.io/atom.xml" rel="self"/>
  
  <link href="https://leolichenxi.github.io/"/>
  <updated>2022-02-21T11:12:30.961Z</updated>
  <id>https://leolichenxi.github.io/</id>
  
  <author>
    <name>李晨曦</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>局部性和缓存命中率</title>
    <link href="https://leolichenxi.github.io/2022/02/01/%E4%BB%A3%E7%A0%81%E7%AF%87/%E5%B1%80%E9%83%A8%E6%80%A7/"/>
    <id>https://leolichenxi.github.io/2022/02/01/%E4%BB%A3%E7%A0%81%E7%AF%87/%E5%B1%80%E9%83%A8%E6%80%A7/</id>
    <published>2022-02-01T05:43:00.000Z</published>
    <updated>2022-02-21T11:12:30.961Z</updated>
    
    <content type="html"><![CDATA[<h2 id="时间局部性"><a href="#时间局部性" class="headerlink" title="时间局部性"></a>时间局部性</h2><h2 id="空间局部性"><a href="#空间局部性" class="headerlink" title="空间局部性"></a>空间局部性</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;时间局部性&quot;&gt;&lt;a href=&quot;#时间局部性&quot; class=&quot;headerlink&quot; title=&quot;时间局部性&quot;&gt;&lt;/a&gt;时间局部性&lt;/h2&gt;&lt;h2 id=&quot;空间局部性&quot;&gt;&lt;a href=&quot;#空间局部性&quot; class=&quot;headerlink&quot; title=&quot;空间局</summary>
      
    
    
    
    <category term="Codes" scheme="https://leolichenxi.github.io/categories/Codes/"/>
    
    
    <category term="Codes" scheme="https://leolichenxi.github.io/tags/Codes/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://leolichenxi.github.io/2021/11/18/U3D/%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/%E5%9B%BE%E7%89%87%E6%A0%BC%E5%BC%8F%E4%BC%98%E5%8C%96/"/>
    <id>https://leolichenxi.github.io/2021/11/18/U3D/%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/%E5%9B%BE%E7%89%87%E6%A0%BC%E5%BC%8F%E4%BC%98%E5%8C%96/</id>
    <published>2021-11-18T07:20:09.089Z</published>
    <updated>2021-11-18T07:23:24.171Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Unity DOTS</title>
    <link href="https://leolichenxi.github.io/2021/08/30/U3D/ECS/Unity%20DOTS/"/>
    <id>https://leolichenxi.github.io/2021/08/30/U3D/ECS/Unity%20DOTS/</id>
    <published>2021-08-30T04:00:00.000Z</published>
    <updated>2022-02-21T11:07:38.984Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Job-System"><a href="#Job-System" class="headerlink" title="Job System"></a>Job System</h1><p><a href="file:///D:/Program%20Files/2020.3.14f1c1/Editor/Data/Documentation/en/Manual/JobSystem.html">官方文档</a></p><ol><li><p>借助 Unity C# 作业系统，用户可以编写与 Unity 其余部分良好交互的多线程代码，并使编写正确代码变得更加容易。</p></li><li><p>编写多线程代码可以带来高性能优势，包括显著提高帧率。将 Burst 编译器与 C# 作业配合使用可以提高代码生成质量，还可以大大降低移动设备的电池消耗。</p></li><li><p>C# 作业系统的一个重要特点是它与 Unity 内部使用的系统（Unity 的原生作业系统）相集成。用户编写的代码与 Unity 共享工作线程。此协作避免了创建超过 CPU 核心数的线程（这种情况会导致争用 CPU 资源）</p></li></ol><h3 id="NativeContainer"><a href="#NativeContainer" class="headerlink" title="NativeContainer"></a>NativeContainer</h3><blockquote><p>NativeContainer是一种托管值类型，为本机内存提供了一个相对安全的C#封装器。它包含一个指向非托管分配的指针。与Unity C# 作业系统一起使用时，NativeContainer允许Job 访问与主线程共享的数据，而不是使用副本。</p></blockquote><ul><li>NativeList - 可调整大小的 NativeArray。</li><li>NativeHashMap - 键/值对。</li><li>NativeMultiHashMap - 每个键有多个值。</li><li>NativeQueue  - 先进先出 (FIFO) 队列。</li></ul><h3 id="NativeContainer-Allocator"><a href="#NativeContainer-Allocator" class="headerlink" title="NativeContainer Allocator"></a>NativeContainer Allocator</h3><blockquote><p>创建 NativeContainer 时，必须指定所需的内存分配类型。分配类型取决于作业运行的时间长度。因此，可以定制分配以便在每种情况下获得最佳性能。可以使用三种 Allocator 类型进行 NativeContainer 内存分配和释放。在实例化 NativeContainer 时需要指定适当的一种类型。</p></blockquote><ul><li>Allocator.Temp 具有最快的分配速度。此类型适用于寿命为一帧或更短的分配，不应该使用Temp将NativeContainer 分配传递给Job，在方法调用返回之前，还需要调用Dispose方法。</li></ul><p>以下错误 不应该使用Temp将NativeContainer 分配传递给Job</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">public struct JobSum : IJob</span><br><span class="line">&#123;</span><br><span class="line">    public int a;</span><br><span class="line">    public int b;</span><br><span class="line">    public NativeArray&lt;int&gt; result;</span><br><span class="line">    public void Execute()</span><br><span class="line">    &#123;</span><br><span class="line">        result[0] =  result[0]+ a + b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    void Test()</span><br><span class="line">    &#123;</span><br><span class="line">        JobSum jobSum = new JobSum();</span><br><span class="line">        jobSum.a = 1;</span><br><span class="line">        jobSum.b = 10;</span><br><span class="line">        </span><br><span class="line">        NativeArray&lt;int&gt;  result = new NativeArray&lt;int&gt;(1, Allocator.Temp );</span><br><span class="line">        jobSum.result = result;</span><br><span class="line">        var handle =  jobSum.Schedule();</span><br><span class="line">        handle.Complete();</span><br><span class="line">        result.Dispose();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><p>Allocator.TempJob的分配速度比Temp慢，但比Persistent快。此类型适用于寿命为四帧的分配，并具有线程安全性，如果没有在四帧内对其执行Dispose,控制台会输出一条从本机代码生成的警告。大多数小作业都使用这种 NativeContainer 分配类型。</p></li><li><p>Allocator.Persistent 是最慢的分配，但可以在您所需的任意时间内持续存在，如果有必要，可以在整个应用程序的生命周期内存在。此分配器是直接调用 malloc 的封装器。持续时间较长的作业可以使用这种 NativeContainer 分配类型。在非常注重性能的情况下不应使用 Persistent。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Job-System&quot;&gt;&lt;a href=&quot;#Job-System&quot; class=&quot;headerlink&quot; title=&quot;Job System&quot;&gt;&lt;/a&gt;Job System&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;file:///D:/Program%20Files/20</summary>
      
    
    
    
    <category term="U3D" scheme="https://leolichenxi.github.io/categories/U3D/"/>
    
    
    <category term="框架" scheme="https://leolichenxi.github.io/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>CSharpLua</title>
    <link href="https://leolichenxi.github.io/2021/06/17/Tools/CSharp.lua/"/>
    <id>https://leolichenxi.github.io/2021/06/17/Tools/CSharp.lua/</id>
    <published>2021-06-17T04:00:00.000Z</published>
    <updated>2021-06-17T11:12:00.203Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSharpLua"><a href="#CSharpLua" class="headerlink" title="CSharpLua"></a>CSharpLua</h1><p>一个翻译c#为Lua的工具<br>Git地址<a href="https://github.com/yanghuan/CSharp.lua.git">Charp.lua</a></p><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">D:\&gt;dotnet CSharp.Lua.Launcher.dll -h</span><br><span class="line">Usage: CSharp.lua [-s srcfolder] [-d dstfolder]</span><br><span class="line">Arguments</span><br><span class="line">-s              : can be a directory where all cs files will be compiled, or a list of files, using &#x27;;&#x27; or &#x27;,&#x27; to separate</span><br><span class="line">-d              : destination directory, will put the out lua files</span><br><span class="line"></span><br><span class="line">Options</span><br><span class="line">-h              : show the help message and exit</span><br><span class="line">-l              : libraries referenced, use &#x27;;&#x27; to separate</span><br><span class="line">                  if the librarie is a module, whitch is compield by CSharp.lua with -module arguemnt, the last character needs to be &#x27;!&#x27; in order to mark  </span><br><span class="line"></span><br><span class="line">-m              : meta files, like System.xml, use &#x27;;&#x27; to separate</span><br><span class="line">-csc            : csc.exe command argumnets, use &#x27; &#x27; or &#x27;\t&#x27; to separate</span><br><span class="line"></span><br><span class="line">-c              : support classic lua version(5.1), default support 5.3</span><br><span class="line">-a              : attributes need to export, use &#x27;;&#x27; to separate, if &quot;&quot;-a&quot;&quot; only, all attributes whill be exported</span><br><span class="line">-e              : enums need to export, use &#x27;;&#x27; to separate, if &quot;&quot;-e&quot;&quot; only, all enums will be exported</span><br><span class="line">-ei             : enums is represented by a variable reference rather than a constant value, need to be used with -e</span><br><span class="line">-p              : do not use debug.setmetatable, in some Addon/Plugin environment debug object cannot be used</span><br><span class="line">-metadata       : export all metadata, use @CSharpLua.Metadata annotations for precise control</span><br><span class="line">-module         : the currently compiled assembly needs to be referenced, it&#x27;s useful for multiple module compiled</span><br><span class="line">-inline-property: inline some single-line properties</span><br><span class="line">-include        : the root directory of the CoreSystem library, adds all the dependencies to a single file named out.lua</span><br><span class="line">-noconcurrent   : close concurrent compile</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="编译源码"><a href="#编译源码" class="headerlink" title="编译源码"></a>编译源码</h3><p>打开 CSharp.lua.sln<br>自己可编译 我这里选择 Release Build</p><p><img src="/images/csharplua/2.png" alt="截图"></p><p>红色标记处为编译成功后</p><p>这里新建一个文件夹将上图红色标记文件拷出</p><p><img src="/images/csharplua/3.png" alt="截图"></p><p>cmd测试： dotnet CSharp.lua.Launcher.dll -h</p><p><img src="/images/csharplua/1.png" alt="截图"></p><h3 id="编译c-工程"><a href="#编译c-工程" class="headerlink" title="编译c# 工程"></a>编译c# 工程</h3><p>lua 使用的 5.3 版本</p><p>新建 CompileScript Console工程,新增文件夹Core<br>创建测试脚本 </p><p>Test.cs</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line"></span><br><span class="line">namespace CompileScript.Core</span><br><span class="line">&#123;</span><br><span class="line">    public class Test</span><br><span class="line">    &#123;</span><br><span class="line">        public int a;</span><br><span class="line">        public int b;</span><br><span class="line"></span><br><span class="line">        public Test()</span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void Debug()</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(a + b);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>TestClass2.cs</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">namespace CompileScript.Core</span><br><span class="line">&#123;</span><br><span class="line">    class TestClass2</span><br><span class="line">    &#123;</span><br><span class="line">        public void Debug()</span><br><span class="line">        &#123;</span><br><span class="line">            Test t = new Test();</span><br><span class="line">            t.Debug();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>命令行： dotnet CSharp.lua.Launcher.dll -s ../CompileScript/CompileScript/CompileScript/Core -d ../Export</p></blockquote><p>在Export 下创建lua工程<br>将<img src="/images/csharplua/4.png" alt="截图"> copy 到工程，新建main.lua</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">require(&quot;All&quot;)()</span><br><span class="line">require(&quot;manifest&quot;)()</span><br><span class="line"></span><br><span class="line">local baseTime = System.DateTime(1970, 1, 1)</span><br><span class="line">print(baseTime:ToString())</span><br><span class="line"></span><br><span class="line">local t = CompileScript.Core.Test()</span><br><span class="line">t.a = 10</span><br><span class="line">t:Debug()</span><br></pre></td></tr></table></figure><p>运行 可以</p><p>将<img src="/images/csharplua/5.png" alt="截图"> copy 到工程，新建main.lua</p><h3 id="第三方库引用"><a href="#第三方库引用" class="headerlink" title="第三方库引用"></a>第三方库引用</h3><p>CompileScript 工程添加Newtonsoft库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using Newtonsoft.Json;</span><br><span class="line">namespace CompileScript.Core</span><br><span class="line">&#123;</span><br><span class="line">    public class Test</span><br><span class="line">    &#123;</span><br><span class="line">        public int a;</span><br><span class="line">        public int b;</span><br><span class="line"></span><br><span class="line">        public Test()</span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void Debug()</span><br><span class="line">        &#123;</span><br><span class="line">          </span><br><span class="line">            Console.WriteLine(a + b);</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(JsonConvert.SerializeObject(this));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>编译指令</p><blockquote><p>G:\Learning\CsharpLua\CSharpLuaTools&gt;dotnet CSharp.lua.Launcher.dll -s ../CompileScript/CompileScript/CompileScript/Core -d ../Export -l ../3rd/Newtonsoft.Json.dll</p></blockquote><p>运行代码 报错</p><p><img src="/images/csharplua/6.png" alt="截图"></p><blockquote><p>这里第三方库dll的实现需要自己适配</p></blockquote><p>这里适配 NewtonsoftJson.JsonConvert.SerializeObject(this)</p><p>新建 NewtonsoftJson.lua</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Newtonsoft = &#123;&#125;</span><br><span class="line">Newtonsoft.Json = &#123;&#125;</span><br><span class="line">Newtonsoft.Json.JsonConvert = &#123;&#125;</span><br><span class="line">Newtonsoft.Json.JsonConvert.SerializeObject = function (obj)</span><br><span class="line">     return &quot;todo&quot;</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">return Newtonsoft</span><br></pre></td></tr></table></figure><p>return “todo”可修改为lua相关的json库，比如cjson</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>第三方库的依赖尽量少依赖</li><li>如果有需要查看适配结果，多测试</li><li>核心库CoreSystem.Lua 文件夹下的适配了多数System。</li></ul><h3 id="Tip"><a href="#Tip" class="headerlink" title="Tip"></a>Tip</h3><p>如果手写Lua 需要调用翻译的lua class 时，如果不知道如何new对象等，参考TestClass2, 创建一个专门的class 用来测试 翻译出的如何new 对象。</p><h3 id="适配踩坑"><a href="#适配踩坑" class="headerlink" title="适配踩坑"></a>适配踩坑</h3><p>Unity工程适配 ToLua支持，Xlua 实际测试不支持，如果在Xlua 使用，不得依赖UnityEngine 相关库。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CSharpLua&quot;&gt;&lt;a href=&quot;#CSharpLua&quot; class=&quot;headerlink&quot; title=&quot;CSharpLua&quot;&gt;&lt;/a&gt;CSharpLua&lt;/h1&gt;&lt;p&gt;一个翻译c#为Lua的工具&lt;br&gt;Git地址&lt;a href=&quot;https://git</summary>
      
    
    
    
    <category term="Tools" scheme="https://leolichenxi.github.io/categories/Tools/"/>
    
    
    <category term="Charp Lua" scheme="https://leolichenxi.github.io/tags/Charp-Lua/"/>
    
  </entry>
  
  <entry>
    <title>四叉树</title>
    <link href="https://leolichenxi.github.io/2021/06/14/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%9B%E5%8F%89%E6%A0%91/"/>
    <id>https://leolichenxi.github.io/2021/06/14/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%9B%E5%8F%89%E6%A0%91/</id>
    <published>2021-06-14T04:00:00.000Z</published>
    <updated>2021-06-14T05:37:26.823Z</updated>
    
    <content type="html"><![CDATA[<h1 id="四叉树"><a href="#四叉树" class="headerlink" title="四叉树"></a>四叉树</h1><p><a href="https://zh.wikipedia.org/wiki%E5%9B%9B%E5%8F%89%E6%A0%91">四叉树Wiki</a></p><blockquote><p>四叉树是一种树状数据结构，在每一个节点上会有四个子区块。四叉树常应用于二维空间资料的分析与分类。 它将资料区分成为四个象限。资料范围可以是方形或矩形或其他任意形状。这种数据结构是由 拉斐尔·芬科尔(Raphael Finkel) 与 J. L. Bentley 在1974年发展出来 。 类似的资料分割方法也称为 Q-tree。 所有的四叉树法有共同之特点:</p></blockquote><ol><li>可分解成为各自的区块</li><li>每个区块都有节点容量。当节点达到最大容量时，节点分裂</li><li>树状数据结构依造四叉树法加以区分</li></ol><h1 id="根据理论在2D游戏中实际优化到的运用，在几百个单位中搜查，屏幕中的物体代码如下"><a href="#根据理论在2D游戏中实际优化到的运用，在几百个单位中搜查，屏幕中的物体代码如下" class="headerlink" title="根据理论在2D游戏中实际优化到的运用，在几百个单位中搜查，屏幕中的物体代码如下"></a>根据理论在2D游戏中实际优化到的运用，在几百个单位中搜查，屏幕中的物体代码如下</h1><h2 id="只要点在区域内就可以插入"><a href="#只要点在区域内就可以插入" class="headerlink" title="只要点在区域内就可以插入"></a>只要点在区域内就可以插入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line"></span><br><span class="line">public class TreeRect</span><br><span class="line">&#123;</span><br><span class="line">    public float X &#123; get; private set; &#125;</span><br><span class="line">    public float Y &#123; get; private set; &#125;</span><br><span class="line">    public float W &#123; get; private set; &#125;</span><br><span class="line">    public float H &#123; get; private set; &#125;</span><br><span class="line">    public float HalfW &#123; get; private set; &#125;</span><br><span class="line">    public float HalfH &#123; get; private set; &#125;</span><br><span class="line">    public float XL &#123; get; private set; &#125;</span><br><span class="line">    public float XR&#123; get; private set; &#125;</span><br><span class="line"></span><br><span class="line">    public float YT &#123; get; private set; &#125;</span><br><span class="line">    public float YB &#123; get; private set; &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 点</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;x&quot;&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=&quot;y&quot;&gt;&lt;/param&gt;</span><br><span class="line">    public TreeRect(float x, float y)</span><br><span class="line">    &#123;</span><br><span class="line">        SetRect(x, y, 0, 0);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 四边形</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;x&quot;&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=&quot;y&quot;&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=&quot;w&quot;&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=&quot;h&quot;&gt;&lt;/param&gt;</span><br><span class="line">    public TreeRect(float x, float y, float w, float h)</span><br><span class="line">    &#123;</span><br><span class="line">        SetRect(x, y, w, h);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public void SetRect(float x, float y, float w, float h)</span><br><span class="line">    &#123;</span><br><span class="line">        X = x;</span><br><span class="line">        Y = y;</span><br><span class="line">        W = w;</span><br><span class="line">        H = h;</span><br><span class="line"></span><br><span class="line">        HalfW = W * 0.5f;</span><br><span class="line">        HalfH = H * 0.5f;</span><br><span class="line"></span><br><span class="line">        XL = X - HalfW;</span><br><span class="line">        XR = X + HalfW;</span><br><span class="line">        YB = Y - HalfH;</span><br><span class="line">        YT = Y + HalfH;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public bool Intersect(TreeRect other)</span><br><span class="line">    &#123;</span><br><span class="line">        return (!(XR &lt; other.XL || XL &gt; other.XR)) &amp;&amp; (!(YT &lt; other.YB || YB &gt; other.YT));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public bool IsCenterIn(TreeRect other)</span><br><span class="line">    &#123;</span><br><span class="line">        return other.X &lt;= XR &amp;&amp; other.X &gt;= XL &amp;&amp; other.Y &lt;= YT &amp;&amp; other.Y &gt;= YB;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public bool IsIn(TreeRect other)</span><br><span class="line">    &#123;</span><br><span class="line">        return XR &lt;= other.XR  &amp;&amp; XL &gt;= other.XL &amp;&amp; YT &lt;= other.YT &amp;&amp; YB &gt;= other.YB;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    public override string ToString()</span><br><span class="line">    &#123;</span><br><span class="line">        return $&quot;(&#123;X&#125;,&#123;Y&#125;,&#123;W&#125;,&#123;H&#125;)&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static TreeRect operator *(TreeRect rhs,float lhs)</span><br><span class="line">    &#123;</span><br><span class="line">        rhs.SetRect(rhs.X * lhs, rhs.Y * lhs, rhs.W * lhs,  rhs.H * lhs);</span><br><span class="line">        return rhs;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class TreeObject</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 信息</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public TreeRect TreeRect;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 属于哪个节点</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public MapQuadTree Node ;</span><br><span class="line">    public int Id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class MapQuadTree</span><br><span class="line">&#123;</span><br><span class="line">    public MapQuadTree Root &#123; get; &#125; //根节点</span><br><span class="line">    public int MaxCount &#123; get; private set; &#125; = 5;</span><br><span class="line">    public int MaxDeep &#123; get; private set; &#125; = 4;</span><br><span class="line">    public int TreeDeep &#123; get; &#125;</span><br><span class="line">    </span><br><span class="line">    public List&lt;MapQuadTree&gt; Childs &#123; get; private set; &#125; </span><br><span class="line">    public MapQuadTree Parent &#123; get; &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public readonly List&lt;TreeObject&gt; TreePointObjs = new List&lt;TreeObject&gt;();</span><br><span class="line"></span><br><span class="line">    // public readonly List&lt;TreeObject&gt; BoundTreeObjs = new List&lt;TreeObject&gt;();</span><br><span class="line">    public TreeRect Rect &#123; get; &#125;</span><br><span class="line">    public bool IsLeafNode =&gt; Childs == null || Childs.Count == 0;</span><br><span class="line">    public bool IsEmptyLeafNode =&gt; TreePointObjs.Count == 0 &amp;&amp; IsLeafNode ;</span><br><span class="line"></span><br><span class="line">    public MapQuadTree(TreeRect rect)</span><br><span class="line">    &#123;</span><br><span class="line">        Rect = rect;</span><br><span class="line">        TreeDeep = 0;</span><br><span class="line">        Root = this;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private MapQuadTree(TreeRect rect, int treeDeep, MapQuadTree parent) : this(rect)</span><br><span class="line">    &#123;</span><br><span class="line">        TreeDeep = treeDeep + 1;</span><br><span class="line">        this.Parent = parent;</span><br><span class="line">        Root = parent.Root;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void Insert(TreeObject treeObj)</span><br><span class="line">    &#123;</span><br><span class="line">        if (!IsInTreeRect(treeObj))</span><br><span class="line">        &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        treeObj.Node = this;</span><br><span class="line">        if (Childs == null)</span><br><span class="line">        &#123;</span><br><span class="line">            TreePointObjs.Add(treeObj);</span><br><span class="line">            if (TreePointObjs.Count &gt; MaxCount)</span><br><span class="line">            &#123;</span><br><span class="line">                SliceTree();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            for (int i = 0; i &lt; Childs.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Childs[i].Insert(treeObj);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void SliceTree()</span><br><span class="line">    &#123;</span><br><span class="line">        if (TreeDeep &gt;= MaxDeep)</span><br><span class="line">        &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 四分 可根据情况 调整</span><br><span class="line">        // lb, lt, rt, rb  目前与unity recttranform 的 4个 corner 保持一致的分布顺序</span><br><span class="line">        Childs = new List&lt;MapQuadTree&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            new MapQuadTree(new TreeRect(Rect.X - Rect.HalfW * 0.5f, Rect.Y - Rect.HalfH * 0.5f, Rect.HalfW, Rect.HalfH), TreeDeep, this),</span><br><span class="line">            new MapQuadTree(new TreeRect(Rect.X - Rect.HalfW * 0.5f, Rect.Y + Rect.HalfH * 0.5f, Rect.HalfW, Rect.HalfH), TreeDeep, this),</span><br><span class="line">            new MapQuadTree(new TreeRect(Rect.X + Rect.HalfW * 0.5f, Rect.Y + Rect.HalfH * 0.5f, Rect.HalfW, Rect.HalfH), TreeDeep, this),</span><br><span class="line">            new MapQuadTree(new TreeRect(Rect.X + Rect.HalfW * 0.5f, Rect.Y - Rect.HalfH * 0.5f, Rect.HalfW, Rect.HalfH), TreeDeep, this)</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        for (int i = 0; i &lt; TreePointObjs.Count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            for (int j = 0; j &lt; Childs.Count; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                Childs[j].Insert(TreePointObjs[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        TreePointObjs.Clear();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public bool Intersect(TreeRect other)</span><br><span class="line">    &#123;</span><br><span class="line">        return Rect.Intersect(other);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private bool IsInTreeRect(TreeObject treeObj)</span><br><span class="line">    &#123;</span><br><span class="line">        return Rect.IsCenterIn(treeObj.TreeRect);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void ClearEmptyNode()</span><br><span class="line">    &#123;</span><br><span class="line">        List&lt;MapQuadTree&gt; emptyLeafNodes = new List&lt;MapQuadTree&gt;();</span><br><span class="line">        ForEachEmptyLeafNode(Root, (t) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            emptyLeafNodes.Add(t);</span><br><span class="line">        &#125;);</span><br><span class="line">        while (emptyLeafNodes.Count &gt; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            for (int i = 0; i &lt; emptyLeafNodes.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                emptyLeafNodes[i].Parent.RemoveChildNode(emptyLeafNodes[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            emptyLeafNodes.Clear();</span><br><span class="line">            ForEachEmptyLeafNode(Root, (t) =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                emptyLeafNodes.Add(t);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void ForEachEmptyLeafNode(MapQuadTree node, Action&lt;MapQuadTree&gt; treeAction)</span><br><span class="line">    &#123;</span><br><span class="line">        if (node.IsEmptyLeafNode)</span><br><span class="line">        &#123;</span><br><span class="line">            treeAction?.Invoke(node);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (node.Childs != null)</span><br><span class="line">        &#123;</span><br><span class="line">            for (int i = 0; i &lt; node.Childs.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                ForEachEmptyLeafNode(node.Childs[i],treeAction);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private void ForEachLeafNode(MapQuadTree node, Action&lt;MapQuadTree&gt; treeAction)</span><br><span class="line">    &#123;</span><br><span class="line">        if (node.IsLeafNode)</span><br><span class="line">        &#123;</span><br><span class="line">            treeAction?.Invoke(node);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (node.Childs != null)</span><br><span class="line">        &#123;</span><br><span class="line">            for (int i = 0; i &lt; node.Childs.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                ForEachLeafNode(node.Childs[i],treeAction);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private void RemoveChildNode(MapQuadTree node)</span><br><span class="line">    &#123;</span><br><span class="line">        if (Childs!=null)</span><br><span class="line">        &#123;</span><br><span class="line">            Childs.Remove(node);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public void ForEach(Action&lt;MapQuadTree&gt; each)</span><br><span class="line">    &#123;</span><br><span class="line">        ForEach(Root, each);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void ForEachInRect(TreeRect rect, Action&lt;MapQuadTree&gt; treeAction)</span><br><span class="line">    &#123;</span><br><span class="line">        ForEachAreaTree(Root, rect, treeAction);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    private void ForEachAreaTree(MapQuadTree node, TreeRect rect, Action&lt;MapQuadTree&gt; treeAction)</span><br><span class="line">    &#123;</span><br><span class="line">        if (!node.Rect.Intersect(rect))</span><br><span class="line">        &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (node.IsLeafNode)</span><br><span class="line">        &#123;</span><br><span class="line">            treeAction?.Invoke(node);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (node.Childs != null)</span><br><span class="line">        &#123;</span><br><span class="line">            for (int i = 0; i &lt; node.Childs.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                ForEachAreaTree(node.Childs[i], rect, treeAction);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void ForEachInRect(TreeRect rect, Action&lt;TreeObject&gt; treeAction)</span><br><span class="line">    &#123;</span><br><span class="line">        ForEachAreaTree(Root, rect, treeAction);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void ForEachAreaTree(MapQuadTree node, TreeRect rect, Action&lt;TreeObject&gt; treeAction)</span><br><span class="line">    &#123;</span><br><span class="line">        if (!node.Rect.Intersect(rect))</span><br><span class="line">        &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (node.IsLeafNode)</span><br><span class="line">        &#123;</span><br><span class="line">            foreach (var treeObject in node.TreePointObjs)</span><br><span class="line">            &#123;</span><br><span class="line">                treeAction?.Invoke(treeObject);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (node.Childs != null)</span><br><span class="line">        &#123;</span><br><span class="line">            for (int i = 0; i &lt; node.Childs.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                ForEachAreaTree(node.Childs[i], rect, treeAction);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void ForEach(MapQuadTree node, Action&lt;MapQuadTree&gt; each)</span><br><span class="line">    &#123;</span><br><span class="line">        if (node == null)</span><br><span class="line">        &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ForEachNodeValues(node, each);</span><br><span class="line">        if (node.Childs != null)</span><br><span class="line">        &#123;</span><br><span class="line">            for (int i = 0; i &lt; node.Childs.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                ForEachNodeValues(node.Childs[i], each);</span><br><span class="line">                ForEach(node.Childs[i], each);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void ForEachNodeValues(MapQuadTree node, Action&lt;MapQuadTree&gt; each)</span><br><span class="line">    &#123;</span><br><span class="line">        each?.Invoke(node);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public override string ToString()</span><br><span class="line">    &#123;</span><br><span class="line">        return $&quot;Deep :&#123;TreeDeep&#125; : &#123;Rect.ToString()&#125; ,+ &#123;TreePointObjs.Count&#125; &quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="只要点和边框必须在区域内就可以插入"><a href="#只要点和边框必须在区域内就可以插入" class="headerlink" title="只要点和边框必须在区域内就可以插入"></a>只要点和边框必须在区域内就可以插入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class BoundTreeObject</span><br><span class="line">&#123;</span><br><span class="line">    public TreeRect TreeRect;</span><br><span class="line">    public MapQuadBoundTree Node;</span><br><span class="line">    public int Id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class MapQuadBoundTree</span><br><span class="line">&#123;</span><br><span class="line">    public MapQuadBoundTree Root &#123; get; &#125; //根节点</span><br><span class="line">    public int MaxCount &#123; get; private set; &#125; = 5;</span><br><span class="line">    public int MaxDeep &#123; get; private set; &#125; = 5;</span><br><span class="line">    public int TreeDeep &#123; get; &#125;</span><br><span class="line">    public List&lt;MapQuadBoundTree&gt; Childs &#123; get; private set; &#125;</span><br><span class="line">    public MapQuadBoundTree Parent &#123; get; &#125;</span><br><span class="line">    private TreeRect[] _treeChildRects = new TreeRect[4];</span><br><span class="line">    public readonly List&lt;BoundTreeObject&gt; TreePointObjs = new List&lt;BoundTreeObject&gt;();</span><br><span class="line"></span><br><span class="line">    public readonly List&lt;BoundTreeObject&gt; BoundTreeObjs = new List&lt;BoundTreeObject&gt;();</span><br><span class="line">    public TreeRect Rect &#123; get; &#125;</span><br><span class="line">    public bool IsLeafNode =&gt; Childs == null || Childs.Count == 0;</span><br><span class="line">    public bool IsEmptyLeafNode =&gt; BoundTreeObjs.Count == 0 &amp;&amp; TreePointObjs.Count == 0 &amp;&amp; IsLeafNode;</span><br><span class="line"></span><br><span class="line">    public MapQuadBoundTree(TreeRect rect)</span><br><span class="line">    &#123;</span><br><span class="line">        Rect = rect;</span><br><span class="line">        TreeDeep = 0;</span><br><span class="line">        Root = this;</span><br><span class="line">        _treeChildRects[0] =</span><br><span class="line">            new TreeRect(Rect.X - Rect.HalfW * 0.5f, Rect.Y - Rect.HalfH * 0.5f, Rect.HalfW, Rect.HalfH);</span><br><span class="line">        _treeChildRects[1] =</span><br><span class="line">            new TreeRect(Rect.X - Rect.HalfW * 0.5f, Rect.Y + Rect.HalfH * 0.5f, Rect.HalfW, Rect.HalfH);</span><br><span class="line">        _treeChildRects[2] =</span><br><span class="line">            new TreeRect(Rect.X + Rect.HalfW * 0.5f, Rect.Y + Rect.HalfH * 0.5f, Rect.HalfW, Rect.HalfH);</span><br><span class="line">        _treeChildRects[3] =</span><br><span class="line">            new TreeRect(Rect.X + Rect.HalfW * 0.5f, Rect.Y - Rect.HalfH * 0.5f, Rect.HalfW, Rect.HalfH);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private MapQuadBoundTree(TreeRect rect, int treeDeep, MapQuadBoundTree parent) : this(rect)</span><br><span class="line">    &#123;</span><br><span class="line">        TreeDeep = treeDeep + 1;</span><br><span class="line">        this.Parent = parent;</span><br><span class="line">        Root = parent.Root;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void Insert(BoundTreeObject treeObj)</span><br><span class="line">    &#123;</span><br><span class="line">        if (!IsInTreeRect(treeObj))</span><br><span class="line">        &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        treeObj.Node = this;</span><br><span class="line">        if (IsAllInsert(treeObj))</span><br><span class="line">        &#123;</span><br><span class="line">            BoundTreeObjs.Add(treeObj);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (Childs == null)</span><br><span class="line">        &#123;</span><br><span class="line">            TreePointObjs.Add(treeObj);</span><br><span class="line">            if (TreePointObjs.Count &gt; MaxCount)</span><br><span class="line">            &#123;</span><br><span class="line">                SliceTree();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            for (int i = 0; i &lt; Childs.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Childs[i].Insert(treeObj);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private bool IsAllInsert(BoundTreeObject treeObj)</span><br><span class="line">    &#123;</span><br><span class="line">        int count = 0;</span><br><span class="line">        for (int i = 0; i &lt; _treeChildRects.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            if (_treeChildRects[i].Intersect(treeObj.TreeRect))</span><br><span class="line">            &#123;</span><br><span class="line">                if (count &gt; 0)</span><br><span class="line">                &#123;</span><br><span class="line">                    return true;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void SliceTree()</span><br><span class="line">    &#123;</span><br><span class="line">        if (TreeDeep &gt;= MaxDeep)</span><br><span class="line">        &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // lb, lt, rt, rb  目前与unity recttranform 的 4个 corner 保持一致的分布顺序</span><br><span class="line">        Childs = new List&lt;MapQuadBoundTree&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            new MapQuadBoundTree(</span><br><span class="line">                new TreeRect(Rect.X - Rect.HalfW * 0.5f, Rect.Y - Rect.HalfH * 0.5f, Rect.HalfW, Rect.HalfH), TreeDeep,</span><br><span class="line">                this),</span><br><span class="line">            new MapQuadBoundTree(</span><br><span class="line">                new TreeRect(Rect.X - Rect.HalfW * 0.5f, Rect.Y + Rect.HalfH * 0.5f, Rect.HalfW, Rect.HalfH), TreeDeep,</span><br><span class="line">                this),</span><br><span class="line">            new MapQuadBoundTree(</span><br><span class="line">                new TreeRect(Rect.X + Rect.HalfW * 0.5f, Rect.Y + Rect.HalfH * 0.5f, Rect.HalfW, Rect.HalfH), TreeDeep,</span><br><span class="line">                this),</span><br><span class="line">            new MapQuadBoundTree(</span><br><span class="line">                new TreeRect(Rect.X + Rect.HalfW * 0.5f, Rect.Y - Rect.HalfH * 0.5f, Rect.HalfW, Rect.HalfH), TreeDeep,</span><br><span class="line">                this)</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        for (int i = 0; i &lt; TreePointObjs.Count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            for (int j = 0; j &lt; Childs.Count; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                Childs[j].Insert(TreePointObjs[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        TreePointObjs.Clear();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public bool Intersect(TreeRect other)</span><br><span class="line">    &#123;</span><br><span class="line">        return Rect.Intersect(other);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private bool IsInTreeRect(BoundTreeObject treeObj)</span><br><span class="line">    &#123;</span><br><span class="line">        return Rect.IsCenterIn(treeObj.TreeRect);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void ClearEmptyNode()</span><br><span class="line">    &#123;</span><br><span class="line">        // TODO  清除空节点 只需从叶节点删除</span><br><span class="line">        List&lt;MapQuadBoundTree&gt; emptyLeafNodes = new List&lt;MapQuadBoundTree&gt;();</span><br><span class="line">        ForEachEmptyLeafNode(Root, (t) =&gt; &#123; emptyLeafNodes.Add(t); &#125;);</span><br><span class="line">        while (emptyLeafNodes.Count &gt; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            for (int i = 0; i &lt; emptyLeafNodes.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                emptyLeafNodes[i].Parent.RemoveChildNode(emptyLeafNodes[i]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            emptyLeafNodes.Clear();</span><br><span class="line">            ForEachEmptyLeafNode(Root, (t) =&gt; &#123; emptyLeafNodes.Add(t); &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void ForEachEmptyLeafNode(MapQuadBoundTree node, Action&lt;MapQuadBoundTree&gt; treeAction)</span><br><span class="line">    &#123;</span><br><span class="line">        if (node.IsEmptyLeafNode)</span><br><span class="line">        &#123;</span><br><span class="line">            treeAction?.Invoke(node);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (node.Childs != null)</span><br><span class="line">        &#123;</span><br><span class="line">            for (int i = 0; i &lt; node.Childs.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                ForEachEmptyLeafNode(node.Childs[i], treeAction);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void RemoveChildNode(MapQuadBoundTree node)</span><br><span class="line">    &#123;</span><br><span class="line">        if (Childs != null)</span><br><span class="line">        &#123;</span><br><span class="line">            Childs.Remove(node);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public void ForEach(Action&lt;MapQuadBoundTree&gt; each)</span><br><span class="line">    &#123;</span><br><span class="line">        ForEach(Root, each);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void ForEachInRect(TreeRect rect, Action&lt;MapQuadBoundTree&gt; treeAction)</span><br><span class="line">    &#123;</span><br><span class="line">        ForEachAreaTree(Root, rect, treeAction);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    private void ForEachAreaTree(MapQuadBoundTree node, TreeRect rect, Action&lt;MapQuadBoundTree&gt; treeAction)</span><br><span class="line">    &#123;</span><br><span class="line">        if (!node.Rect.Intersect(rect))</span><br><span class="line">        &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (node.IsLeafNode)</span><br><span class="line">        &#123;</span><br><span class="line">            treeAction?.Invoke(node);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (node.Childs != null)</span><br><span class="line">        &#123;</span><br><span class="line">            for (int i = 0; i &lt; node.Childs.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                ForEachAreaTree(node.Childs[i], rect, treeAction);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void ForEachInRect(TreeRect rect, Action&lt;BoundTreeObject&gt; treeAction)</span><br><span class="line">    &#123;</span><br><span class="line">        ForEachAreaTree(Root, rect, treeAction);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void ForEachAreaTree(MapQuadBoundTree node, TreeRect rect, Action&lt;BoundTreeObject&gt; treeAction)</span><br><span class="line">    &#123;</span><br><span class="line">        if (!node.Rect.Intersect(rect))</span><br><span class="line">        &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        foreach (var boundTreeObj in node.BoundTreeObjs)</span><br><span class="line">        &#123;</span><br><span class="line">            if (boundTreeObj.TreeRect.Intersect(rect))</span><br><span class="line">            &#123;</span><br><span class="line">                treeAction?.Invoke(boundTreeObj);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (node.IsLeafNode)</span><br><span class="line">        &#123;</span><br><span class="line">            foreach (var boundTreeObj in node.TreePointObjs)</span><br><span class="line">            &#123;</span><br><span class="line">                if (boundTreeObj.TreeRect.Intersect(rect))</span><br><span class="line">                &#123;</span><br><span class="line">                    treeAction?.Invoke(boundTreeObj);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (node.Childs != null)</span><br><span class="line">        &#123;</span><br><span class="line">            for (int i = 0; i &lt; node.Childs.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                ForEachAreaTree(node.Childs[i], rect, treeAction);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void ForEach(MapQuadBoundTree node, Action&lt;MapQuadBoundTree&gt; each)</span><br><span class="line">    &#123;</span><br><span class="line">        if (node == null)</span><br><span class="line">        &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ForEachNodeValues(node, each);</span><br><span class="line">        if (node.Childs != null)</span><br><span class="line">        &#123;</span><br><span class="line">            for (int i = 0; i &lt; node.Childs.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                ForEachNodeValues(node.Childs[i], each);</span><br><span class="line">                ForEach(node.Childs[i], each);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void ForEachNodeValues(MapQuadBoundTree node, Action&lt;MapQuadBoundTree&gt; each)</span><br><span class="line">    &#123;</span><br><span class="line">        each?.Invoke(node);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public override string ToString()</span><br><span class="line">    &#123;</span><br><span class="line">        return $&quot;Deep :&#123;TreeDeep&#125; : &#123;Rect.ToString()&#125; ,+ &#123;TreePointObjs.Count&#125; &quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;四叉树&quot;&gt;&lt;a href=&quot;#四叉树&quot; class=&quot;headerlink&quot; title=&quot;四叉树&quot;&gt;&lt;/a&gt;四叉树&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki%E5%9B%9B%E5%8F%89%E6%A0%91&quot;</summary>
      
    
    
    
    <category term="数据结构" scheme="https://leolichenxi.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="算法" scheme="https://leolichenxi.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>GoogleProtobuffer</title>
    <link href="https://leolichenxi.github.io/2021/06/14/Tools/GoogleProtobuffer/"/>
    <id>https://leolichenxi.github.io/2021/06/14/Tools/GoogleProtobuffer/</id>
    <published>2021-06-14T04:00:00.000Z</published>
    <updated>2021-06-16T08:51:50.686Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Protocolbuffers"><a href="#Protocolbuffers" class="headerlink" title="Protocolbuffers"></a>Protocolbuffers</h1><ul><li><a href="https://github.com/protocolbuffers/protobuf">官方git地址</a></li><li><a href="https://developers.google.com/protocol-buffers">官方文档地址</a></li><li><a href="https://github.com/protocolbuffers/protobuf/releases">官方Release</a></li><li><a href="https://zhuanlan.zhihu.com/p/38200420">知乎介绍</a></li></ul><p>Protocol Buffers 是一种轻便高效的结构化数据存储格式，可以用于结构化数据串行化，很适合做数据存储或 RPC 数据交换格式。它可用于通讯协议、数据存储等领域的语言无关、平台无关、可扩展的序列化结构数据格式。</p><p>常见的数据格式：XML,Json,Protobuf,FlatBuffers 等其它。</p><ul><li>数据储存</li><li>数据交换格式</li></ul><p>使用流程：</p><p>1.编写Scheme;<br>2.使用Protoc 生成代码；</p><h2 id="下载Release-Protoc代码生成工具"><a href="#下载Release-Protoc代码生成工具" class="headerlink" title="下载Release Protoc代码生成工具"></a>下载Release Protoc代码生成工具</h2><blockquote><p>Release中下载Window 或 Mac Os<br><img src="/images/protobuffer/1.png" alt="截图"></p></blockquote><h3 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h3><p>在下载程序后，需要将下载 zip 文件中的 bin 目录设置到环境变量中。</p><p>然后运行 protoc –version 来确定你的编译运行版本已经被正确配置。</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p><a href="https://developers.google.com/protocol-buffers">官方文档地址</a></p><p>生成代码命令</p><blockquote><p>eg:   protoc – csharp_out=SciptOutFolder/  ProtoFolder/filename.proto</p></blockquote><h3 id="Protocol-Buffer-编码原理"><a href="#Protocol-Buffer-编码原理" class="headerlink" title="Protocol Buffer 编码原理"></a>Protocol Buffer 编码原理</h3><p>采用Varint编码规则</p><h4 id="Varint编码"><a href="#Varint编码" class="headerlink" title="Varint编码"></a>Varint编码</h4><p>variant是可变长的编码方式,Varint是一种使用一个或多个字节序列化整数的方法，会把整数编码变为长字节，对于32位整型进过Variant编码后需要1-5个字节,小的数字使用1个byte，大的数字使用5个bytes。64位整型数据编码后占用1~10个字节。在实际场景中小数字的使用率远远大于大数字，因此Varint编码对于大部分的场景都可以起到很好的压缩效果。</p><h5 id="编码原理"><a href="#编码原理" class="headerlink" title="编码原理"></a>编码原理</h5><p>除了最后一个字节外,Varint编码中的每个字节都设置了最高有效位（most significant bit - msb）–msb为1则表明后面的字节还是属于当前数据的,如果是0那么这是当前数据的最后一个字节数据。每个字节的第7位用于以7位为一组存储数字的二进制补码表示，最低有效组在前，或者叫最低有效字节在前。这表明varint编码后数据的字节是按照小端序排列的。</p><p>关于字节排列的方式引用一下维基百科上的词条</p><blockquote><p>字节的排列方式有两个通用规则。例如，一个多位的整数，按照存储地址从低到高排序的字节中，如果该整数的最低有效字节（类似于最低有效位）在最高有效字节的前面，则称小端序；反之则称大端序。在网络应用中，字节序是一个必须被考虑的因素，因为不同机器类型可能采用不同标准的字节序，所以均按照网络标准转化。</p></blockquote><p>通俗一点说就是：大端序是按照数字的书写顺序排列的，而小端序是颠倒书写顺序进行排列的。</p><blockquote><p>variant编码对负数编码效率低</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Protocolbuffers&quot;&gt;&lt;a href=&quot;#Protocolbuffers&quot; class=&quot;headerlink&quot; title=&quot;Protocolbuffers&quot;&gt;&lt;/a&gt;Protocolbuffers&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;htt</summary>
      
    
    
    
    <category term="Tools" scheme="https://leolichenxi.github.io/categories/Tools/"/>
    
    
    <category term="GoogleProtobuffer" scheme="https://leolichenxi.github.io/tags/GoogleProtobuffer/"/>
    
  </entry>
  
  <entry>
    <title>ECS架构</title>
    <link href="https://leolichenxi.github.io/2021/06/14/U3D/ECS/ECS%E6%9E%B6%E6%9E%84/"/>
    <id>https://leolichenxi.github.io/2021/06/14/U3D/ECS/ECS%E6%9E%B6%E6%9E%84/</id>
    <published>2021-06-14T04:00:00.000Z</published>
    <updated>2022-02-21T11:07:33.626Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>ECS ,即  Entity-Component-System 的缩写，其模式遵循组合优于继承原则，游戏内的每一个单位都是一个实体，每个实体又又一个或多个组件构成，每个组件仅仅包含代表其特性的数据(即在组件中没有任何方法),系统便是来处理拥有一个或多个相同组件的实体集合的工具，其只拥有行为，在这个例子中，处理移动的系统仅仅关心拥有移动能力的实体，它会遍历所有拥有相关组件的实体，并根据相关的数据，更新实体。</p></blockquote><p><img src="/images/ecs/1.png" alt="截图"></p><p>这里核心思路区别于Unity ECS，提供一个设计思路。Unity 后面单独研究下</p><p>ECS 获取组件较为麻烦。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;ECS ,即  Entity-Component-System 的缩写，其模式遵循组合优于继承原则，游戏内的每一个单位都是一个实体，每个实体又又一个或多个组件构成，每个组件仅仅包含代表其特性的数据(即在组件中没有任何方法),系统便是来处理拥有一个或</summary>
      
    
    
    
    <category term="U3D" scheme="https://leolichenxi.github.io/categories/U3D/"/>
    
    
    <category term="框架" scheme="https://leolichenxi.github.io/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>开发流程-客户端-策划配置数据</title>
    <link href="https://leolichenxi.github.io/2021/06/14/%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B%E7%AE%A1%E7%90%86/%E7%AD%96%E5%88%92%E9%85%8D%E7%BD%AE%E8%A1%A8%E7%AE%A1%E7%90%86/"/>
    <id>https://leolichenxi.github.io/2021/06/14/%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B%E7%AE%A1%E7%90%86/%E7%AD%96%E5%88%92%E9%85%8D%E7%BD%AE%E8%A1%A8%E7%AE%A1%E7%90%86/</id>
    <published>2021-06-14T04:00:00.000Z</published>
    <updated>2021-08-11T09:36:14.098Z</updated>
    
    <content type="html"><![CDATA[<h1 id="客户端配置数据管理"><a href="#客户端配置数据管理" class="headerlink" title="客户端配置数据管理"></a>客户端配置数据管理</h1><blockquote><p>开发或上线后不可避免的出现配置逻辑错误问题，系统功能通常会给策划留有很大的配置空间用于铺量和修改，但不可避免的会有错误，这里记录下配置表检查的原则</p></blockquote><h3 id="必须检查的情况"><a href="#必须检查的情况" class="headerlink" title="必须检查的情况"></a>必须检查的情况</h3><ol><li>id 与其它表格关联</li><li>配置资源路径，必须判断资源是否存在</li><li>配置要求一定得格式，比如约定的分隔符 1;2 分割数组，可能会配置成1,2</li><li>有 type:id  type 不同id 指向不用配置表，必须检查。</li><li>未完待续…..</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;客户端配置数据管理&quot;&gt;&lt;a href=&quot;#客户端配置数据管理&quot; class=&quot;headerlink&quot; title=&quot;客户端配置数据管理&quot;&gt;&lt;/a&gt;客户端配置数据管理&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;开发或上线后不可避免的出现配置逻辑错误问题，系统功能通常会</summary>
      
    
    
    
    <category term="开发流程" scheme="https://leolichenxi.github.io/categories/%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/"/>
    
    
    <category term="开发流程" scheme="https://leolichenxi.github.io/tags/%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>cmd-常用命令</title>
    <link href="https://leolichenxi.github.io/2021/06/14/cmd/"/>
    <id>https://leolichenxi.github.io/2021/06/14/cmd/</id>
    <published>2021-06-14T04:00:00.000Z</published>
    <updated>2021-08-11T09:49:52.822Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ipconfig-flushdns"><a href="#ipconfig-flushdns" class="headerlink" title="ipconfig /flushdns"></a>ipconfig /flushdns</h3><h3 id="ipconfig"><a href="#ipconfig" class="headerlink" title="ipconfig"></a>ipconfig</h3><h3 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h3><h3 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;ipconfig-flushdns&quot;&gt;&lt;a href=&quot;#ipconfig-flushdns&quot; class=&quot;headerlink&quot; title=&quot;ipconfig /flushdns&quot;&gt;&lt;/a&gt;ipconfig /flushdns&lt;/h3&gt;&lt;h3 id=&quot;ipc</summary>
      
    
    
    
    <category term="shell" scheme="https://leolichenxi.github.io/categories/shell/"/>
    
    
    <category term="shell" scheme="https://leolichenxi.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>1.从Unlit-Color开始入手</title>
    <link href="https://leolichenxi.github.io/2021/06/14/Shader/1%E7%AC%94%E8%AE%B0_builtin_shaders_Unlit-Color/"/>
    <id>https://leolichenxi.github.io/2021/06/14/Shader/1%E7%AC%94%E8%AE%B0_builtin_shaders_Unlit-Color/</id>
    <published>2021-06-14T04:00:00.000Z</published>
    <updated>2022-02-21T11:10:49.482Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Shader-源码-Unlit-Color"><a href="#Shader-源码-Unlit-Color" class="headerlink" title="Shader 源码-Unlit-Color"></a>Shader 源码-Unlit-Color</h1><p>需要有一定的shader基础，深刻理解unity 内置shader的实现原里。</p><blockquote><p>先贴代码，逐步分析</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">// Unity built-in shader source. Copyright (c) 2016 Unity Technologies. MIT license (see license.txt)</span><br><span class="line"></span><br><span class="line">// Unlit shader. Simplest possible colored shader.</span><br><span class="line">// - no lighting</span><br><span class="line">// - no lightmap support</span><br><span class="line">// - no texture</span><br><span class="line"></span><br><span class="line">Shader &quot;Unlit/Color&quot;</span><br><span class="line">&#123;</span><br><span class="line">    Properties</span><br><span class="line">    &#123;</span><br><span class="line">        _Color (&quot;Main Color&quot;, Color) = (1, 1, 1, 1)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    SubShader</span><br><span class="line">    &#123;</span><br><span class="line">        Tags &#123; &quot;RenderType&quot; = &quot;Opaque&quot; &#125;</span><br><span class="line">        LOD 100</span><br><span class="line"></span><br><span class="line">        Pass</span><br><span class="line">        &#123;</span><br><span class="line">            CGPROGRAM</span><br><span class="line">            </span><br><span class="line">            #pragma vertex vert</span><br><span class="line">            #pragma fragment frag</span><br><span class="line">            #pragma target 2.0</span><br><span class="line">            #pragma multi_compile_fog</span><br><span class="line"></span><br><span class="line">            #include &quot;UnityCG.cginc&quot;</span><br><span class="line"></span><br><span class="line">            struct appdata_t</span><br><span class="line">            &#123;</span><br><span class="line">                float4 vertex: POSITION;</span><br><span class="line">                UNITY_VERTEX_INPUT_INSTANCE_ID</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            struct v2f</span><br><span class="line">            &#123;</span><br><span class="line">                float4 vertex: SV_POSITION;</span><br><span class="line">                UNITY_FOG_COORDS(0)</span><br><span class="line">                UNITY_VERTEX_OUTPUT_STEREO</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            fixed4 _Color;</span><br><span class="line"></span><br><span class="line">            v2f vert(appdata_t v)</span><br><span class="line">            &#123;</span><br><span class="line">                v2f o;</span><br><span class="line">                UNITY_SETUP_INSTANCE_ID(v);</span><br><span class="line">                UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);</span><br><span class="line">                o.vertex = UnityObjectToClipPos(v.vertex);</span><br><span class="line">                UNITY_TRANSFER_FOG(o, o.vertex);</span><br><span class="line">                return o;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            fixed4 frag(v2f i): SV_Target</span><br><span class="line">            &#123;</span><br><span class="line">                fixed4 col = _Color;</span><br><span class="line">                UNITY_APPLY_FOG(i.fogCoord, col);</span><br><span class="line">                UNITY_OPAQUE_ALPHA(col.a);</span><br><span class="line">                return col;</span><br><span class="line">            &#125;</span><br><span class="line">            ENDCG</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="pragma-multi-compile-fog"><a href="#pragma-multi-compile-fog" class="headerlink" title="#pragma multi_compile_fog"></a>#pragma multi_compile_fog</h2><p>实现很简单，重点点记录</p><ul><li>#pragma multi_compile_fog</li><li>UNITY_VERTEX_INPUT_INSTANCE_ID</li><li>UNITY_FOG_COORDS(0)</li><li>UNITY_VERTEX_OUTPUT_STEREO</li><li>UNITY_SETUP_INSTANCE_ID(v)</li><li>UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o)</li><li>UNITY_TRANSFER_FOG(o, o.vertex)</li><li>UNITY_APPLY_FOG(i.fogCoord, col)</li><li>UNITY_OPAQUE_ALPHA(col.a)</li></ul><p>这些在一个基础的顶点片元着色器的基本原里。</p><h3 id="基础概念宏定义"><a href="#基础概念宏定义" class="headerlink" title="基础概念宏定义"></a>基础概念宏定义</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#define 标识  //定义标识，如果 （标识） 已经被标识过会报错。</span><br><span class="line">#undef 标识   //取消标识的定义</span><br><span class="line">#ifdef 标识   //判断某个宏是否被定义，若已定义，执行随后的语句</span><br><span class="line">#ifndef 标示  // 判断&quot;标示&quot;是否定义，如果被定义则返回false，如果没有被定义则返回true</span><br><span class="line"></span><br><span class="line">#if           //编译预处理中的条件命令，相当于C语法中的if语句</span><br><span class="line">#elif         // 若#if, #ifdef, #ifndef或前面的#elif条件不满足，则执行#elif之后的语句，相当于C语法中的else-if</span><br><span class="line">#else         //与#if, #ifdef, #ifndef对应, 若这些条件不满足，则执行#else之后的语句，相当于C语法中的else</span><br><span class="line">#endif        //#if, #ifdef, #ifndef这些条件命令的结束标志.  </span><br><span class="line">defined(宏)        与#if, #elif配合使用，判断某个宏是否被定义</span><br></pre></td></tr></table></figure><h3 id="include-“UnityCG-cginc”"><a href="#include-“UnityCG-cginc”" class="headerlink" title="#include “UnityCG.cginc”"></a>#include “UnityCG.cginc”</h3><p>这里需要注意下,include并不是像c++ 这样在调用shader时将文件include进去，而是在编译shader时决定生成的代码。可以测试在去掉#pragma multi_compile_fog前后点击shader面板 Compile and show code 查看编译后的代码。</p><p>追到UnityCG.cginc文件中查看UNITY_FOG_COORDS宏</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#if defined(FOG_LINEAR) || defined(FOG_EXP) || defined(FOG_EXP2)</span><br><span class="line">    #define UNITY_FOG_COORDS(idx) UNITY_FOG_COORDS_PACKED(idx, float1)</span><br><span class="line"></span><br><span class="line">    #if (SHADER_TARGET &lt; 30) || defined(SHADER_API_MOBILE)</span><br><span class="line">        // mobile or SM2.0: calculate fog factor per-vertex</span><br><span class="line">        #define UNITY_TRANSFER_FOG(o,outpos) UNITY_CALC_FOG_FACTOR((outpos).z); o.fogCoord.x = unityFogFactor</span><br><span class="line">        #define UNITY_TRANSFER_FOG_COMBINED_WITH_TSPACE(o,outpos) UNITY_CALC_FOG_FACTOR((outpos).z); o.tSpace1.y = tangentSign; o.tSpace2.y = unityFogFactor</span><br><span class="line">        #define UNITY_TRANSFER_FOG_COMBINED_WITH_WORLD_POS(o,outpos) UNITY_CALC_FOG_FACTOR((outpos).z); o.worldPos.w = unityFogFactor</span><br><span class="line">        #define UNITY_TRANSFER_FOG_COMBINED_WITH_EYE_VEC(o,outpos) UNITY_CALC_FOG_FACTOR((outpos).z); o.eyeVec.w = unityFogFactor</span><br><span class="line">    #else</span><br><span class="line">        // SM3.0 and PC/console: calculate fog distance per-vertex, and fog factor per-pixel</span><br><span class="line">        #define UNITY_TRANSFER_FOG(o,outpos) o.fogCoord.x = (outpos).z</span><br><span class="line">        #define UNITY_TRANSFER_FOG_COMBINED_WITH_TSPACE(o,outpos) o.tSpace2.y = (outpos).z</span><br><span class="line">        #define UNITY_TRANSFER_FOG_COMBINED_WITH_WORLD_POS(o,outpos) o.worldPos.w = (outpos).z</span><br><span class="line">        #define UNITY_TRANSFER_FOG_COMBINED_WITH_EYE_VEC(o,outpos) o.eyeVec.w = (outpos).z</span><br><span class="line">    #endif</span><br><span class="line">#else</span><br><span class="line">    #define UNITY_FOG_COORDS(idx)</span><br><span class="line">    #define UNITY_TRANSFER_FOG(o,outpos)</span><br><span class="line">    #define UNITY_TRANSFER_FOG_COMBINED_WITH_TSPACE(o,outpos)</span><br><span class="line">    #define UNITY_TRANSFER_FOG_COMBINED_WITH_WORLD_POS(o,outpos)</span><br><span class="line">    #define UNITY_TRANSFER_FOG_COMBINED_WITH_EYE_VEC(o,outpos)</span><br><span class="line">#endif</span><br></pre></td></tr></table></figure><p>当开启Fog时 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#define UNITY_FOG_COORDS(idx) UNITY_FOG_COORDS_PACKED(idx, float1)</span><br></pre></td></tr></table></figure><blockquote><p>UNITY_FOG_COORDS_PACKED</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#define UNITY_FOG_COORDS_PACKED(idx, vectype) vectype fogCoord : TEXCOORD##idx;</span><br></pre></td></tr></table></figure><p>可知实际 UNITY_FOG_COORDS(0) 如果Fog开启,相当一在片元数据中定义了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">float1 fogCoord : TEXCOORD0</span><br></pre></td></tr></table></figure><blockquote><p>UNITY_TRANSFER_FOG</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">#if defined(FOG_LINEAR) || defined(FOG_EXP) || defined(FOG_EXP2)</span><br><span class="line">    #define UNITY_FOG_COORDS(idx) UNITY_FOG_COORDS_PACKED(idx, float1)</span><br><span class="line"></span><br><span class="line">    #if (SHADER_TARGET &lt; 30) || defined(SHADER_API_MOBILE)</span><br><span class="line">        // mobile or SM2.0: calculate fog factor per-vertex</span><br><span class="line">        #define UNITY_TRANSFER_FOG(o,outpos) UNITY_CALC_FOG_FACTOR((outpos).z); o.fogCoord.x = unityFogFactor</span><br><span class="line">        #define UNITY_TRANSFER_FOG_COMBINED_WITH_TSPACE(o,outpos) UNITY_CALC_FOG_FACTOR((outpos).z); o.tSpace1.y = tangentSign; o.tSpace2.y = unityFogFactor</span><br><span class="line">        #define UNITY_TRANSFER_FOG_COMBINED_WITH_WORLD_POS(o,outpos) UNITY_CALC_FOG_FACTOR((outpos).z); o.worldPos.w = unityFogFactor</span><br><span class="line">        #define UNITY_TRANSFER_FOG_COMBINED_WITH_EYE_VEC(o,outpos) UNITY_CALC_FOG_FACTOR((outpos).z); o.eyeVec.w = unityFogFactor</span><br><span class="line">    #else</span><br><span class="line">        // SM3.0 and PC/console: calculate fog distance per-vertex, and fog factor per-pixel</span><br><span class="line">        #define UNITY_TRANSFER_FOG(o,outpos) o.fogCoord.x = (outpos).z</span><br><span class="line">        #define UNITY_TRANSFER_FOG_COMBINED_WITH_TSPACE(o,outpos) o.tSpace2.y = (outpos).z</span><br><span class="line">        #define UNITY_TRANSFER_FOG_COMBINED_WITH_WORLD_POS(o,outpos) o.worldPos.w = (outpos).z</span><br><span class="line">        #define UNITY_TRANSFER_FOG_COMBINED_WITH_EYE_VEC(o,outpos) o.eyeVec.w = (outpos).z</span><br><span class="line">    #endif</span><br><span class="line">#else</span><br><span class="line">    #define UNITY_FOG_COORDS(idx)</span><br><span class="line">    #define UNITY_TRANSFER_FOG(o,outpos)</span><br><span class="line">    #define UNITY_TRANSFER_FOG_COMBINED_WITH_TSPACE(o,outpos)</span><br><span class="line">    #define UNITY_TRANSFER_FOG_COMBINED_WITH_WORLD_POS(o,outpos)</span><br><span class="line">    #define UNITY_TRANSFER_FOG_COMBINED_WITH_EYE_VEC(o,outpos)</span><br><span class="line">#endif</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>因为   #pragma target 2.0 时 SHADER_TARGET &lt;30 所以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#if defined(FOG_LINEAR)</span><br><span class="line">    // factor = (end-z)/(end-start) = z * (-1/(end-start)) + (end/(end-start))</span><br><span class="line">    #define UNITY_CALC_FOG_FACTOR_RAW(coord) float unityFogFactor = (coord) * unity_FogParams.z + unity_FogParams.w</span><br><span class="line">#elif defined(FOG_EXP)</span><br><span class="line">    // factor = exp(-density*z)</span><br><span class="line">    #define UNITY_CALC_FOG_FACTOR_RAW(coord) float unityFogFactor = unity_FogParams.y * (coord); unityFogFactor = exp2(-unityFogFactor)</span><br><span class="line">#elif defined(FOG_EXP2)</span><br><span class="line">    // factor = exp(-(density*z)^2)</span><br><span class="line">    #define UNITY_CALC_FOG_FACTOR_RAW(coord) float unityFogFactor = unity_FogParams.x * (coord); unityFogFactor = exp2(-unityFogFactor*unityFogFactor)</span><br><span class="line">#else</span><br><span class="line">    #define UNITY_CALC_FOG_FACTOR_RAW(coord) float unityFogFactor = 0.0</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#define UNITY_CALC_FOG_FACTOR(coord) UNITY_CALC_FOG_FACTOR_RAW(UNITY_Z_0_FAR_FROM_CLIPSPACE(coord))</span><br><span class="line"></span><br><span class="line"> #define UNITY_TRANSFER_FOG(o,outpos) UNITY_CALC_FOG_FACTOR((outpos).z); o.fogCoord.x = unityFogFactor</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote></blockquote><p>可以追溯宏定义的运算 得到 fogCoord值,并在 UNITY_APPLY_FOG(i.fogCoord, col);得到新得col值。</p><h3 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h3><p>INSTANCE 和FOG 会在后面补充，这里只记录shader分析的一个过程。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Shader-源码-Unlit-Color&quot;&gt;&lt;a href=&quot;#Shader-源码-Unlit-Color&quot; class=&quot;headerlink&quot; title=&quot;Shader 源码-Unlit-Color&quot;&gt;&lt;/a&gt;Shader 源码-Unlit-Color&lt;/</summary>
      
    
    
    
    <category term="ShaderLab" scheme="https://leolichenxi.github.io/categories/ShaderLab/"/>
    
    
    <category term="builtin_shaders" scheme="https://leolichenxi.github.io/tags/builtin-shaders/"/>
    
  </entry>
  
  <entry>
    <title>AndroidAppBundle</title>
    <link href="https://leolichenxi.github.io/2021/06/14/U3D/aab%E6%89%93%E5%8C%85/"/>
    <id>https://leolichenxi.github.io/2021/06/14/U3D/aab%E6%89%93%E5%8C%85/</id>
    <published>2021-06-14T04:00:00.000Z</published>
    <updated>2022-02-21T11:07:21.602Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://developer.android.com/guide/app-bundle/asset-delivery">官方文档</a></p><h2 id="AndroidAppBundle"><a href="#AndroidAppBundle" class="headerlink" title="AndroidAppBundle"></a>AndroidAppBundle</h2><blockquote><p>googlePlay上一种新的上传格式，以前是传apk,现在可以传Bundle。google play通过dynamic Delevery从Bundle中现在特定的配置给用户。</p></blockquote><h2 id="Play-Asset-Delivery"><a href="#Play-Asset-Delivery" class="headerlink" title="Play Asset Delivery"></a>Play Asset Delivery</h2><p>Play Asset Delivery (PAD) 将 app bundle 的优势带到游戏中。它允许超过 150 MB 的游戏替换旧版扩展文件 (OBB)，方法是将包含游戏所需的所有资源的单个工件发布到 Play。PAD 提供了灵活的分发模式、自动更新、压缩和增量修补功能，并且可免费使用。使用 PAD，所有资源包均在 Google Play 上托管和提供，因此您无需使用内容分发网络 (CDN) 向玩家提供游戏资源。</p><p>Play Asset Delivery 使用资源包，资源包由资源（如纹理、着色器和声音）组成，但不包含可执行代码。通过 Dynamic Delivery，您可以按照以下三种分发模式自定义如何以及何时将各个资源包下载到设备上：安装时分发、快速跟进式分发和按需分发。</p><h4 id="install-time"><a href="#install-time" class="headerlink" title="install-time"></a>install-time</h4><p>资源包在用户安装应用时分发。这些资源包以拆分 APK（APK 集的一部分）的形式提供。它们也称为“预先”资源包；您可以在应用启动时立即使用这些资源包。这些资源包会增加 Google Play 商店上列出的应用大小。用户无法修改或删除这些资源包。</p><h4 id="fast-follow"><a href="#fast-follow" class="headerlink" title="fast-follow"></a>fast-follow</h4><p>资源包会在用户安装应用后立即自动下载；用户无需打开应用即可开始 fast-follow 下载。此类下载不会阻止用户访问应用。这些资源包会增加 Google Play 商店上列出的应用大小。</p><h4 id="on-demand"><a href="#on-demand" class="headerlink" title="on-demand"></a>on-demand</h4><p>资源包会在应用运行时下载。</p><p>Google Play 商店会以归档文件（而非拆分 APK）的形式提供配置为 fast-follow 和 on-demand 的资源包。这些资源包随后会在应用的内部存储空间中展开。您可以使用 Play Core API 查询以这种方式提供的资源包的位置。应用无法假设这些文件的存在或其位置，因为它们可能会被用户删除，或由 Play Core SDK 在游戏会话之间移动。尽管这些文件可由应用写入，您也应将其视为只读文件，因为资源包补丁程序依赖于这些文件的完整性。</p><p>每个 fast-follow 和 on-demand Asset Pack 的下载大小上限为 512 MB。<br>所有 install-time Asset Pack 的总下载大小上限为 1 GB。<br>一个 Android App Bundle 中的所有 Asset Pack 的总下载大小上限为 2 GB。<br>一个 Android App Bundle 中最多可以使用 50 个资源包。</p><p>也就是从install-time 我们可以放比较多的重要资源</p><p>fast-follow 和 on-demand 放二级资源</p><p>我们项目目前有将近4G 的资源 最新的assetbundle（3.75G）</p><p>从PAD中可以处理将近2G的资源，仍需有将近2G的资源从cdn下载。</p><h3 id="PAD需要处理的工作"><a href="#PAD需要处理的工作" class="headerlink" title="PAD需要处理的工作"></a>PAD需要处理的工作</h3><ol><li>打包时记录所有的AssetPack信息, 测试分支已经写好。（每个pack的文件和大小信息等。）加入自动打包也已改好。</li><li>根据记录的pack信息 在应用启动时对PAD做资源完整检查;</li><li>每个分包的PlayAssetPack的处理（分包里的assetbundle 或其它资源，需要先加载此AssetPack 再从assetPack里加载assetbundle）这里包含任何分发模式的资源。</li><li>加载AssetBundle的逻辑修改这里主要是是 以及AssetPack在内存中的依赖维护。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">//异步加载</span><br><span class="line">PlayAssetPackRequest playAssetPackRequest = PlayAssetDelivery.RetrieveAssetPackAsync(packName);</span><br><span class="line"> //异步加载</span><br><span class="line">AssetBundleCreateRequest request = playAssetPackRequest.LoadAssetBundleAsync(abPath)</span><br><span class="line"></span><br><span class="line">//目前的加assetbundle     </span><br><span class="line">AssetBundleCreateRequest request = AssetBundle.LoadFromFileAsync(AssetBundleFullPath);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="在-Play-上测试-app-bundle"><a href="#在-Play-上测试-app-bundle" class="headerlink" title="在 Play 上测试 app bundle"></a>在 Play 上测试 app bundle</h3><p><a href="https://developer.android.com/guide/app-bundle/test">https://developer.android.com/guide/app-bundle/test</a></p><h3 id="本地测试流程"><a href="#本地测试流程" class="headerlink" title="本地测试流程"></a>本地测试流程</h3><p><a href="https://developer.android.com/guide/app-bundle/test">官方测试参考文档</a></p><p><a href="https://github.com/google/bundletool/releases">下载BundleTool</a></p><p>将aab装成课本第测试的apks 此步骤以自动加入到打包流程。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bundletool build-apks --local-testing</span><br><span class="line">  --bundle my_app.aab</span><br><span class="line">  --output my_app.apks</span><br></pre></td></tr></table></figure><p>安装到测试机(模拟器需要abd 先链接模拟器，比如夜神模拟器：adb connect 127.0.0.1:62001)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bundletool install-apks --apks my_app.apks</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://developer.android.com/guide/app-bundle/asset-delivery&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;AndroidAppBundle&quot;&gt;&lt;a href=&quot;#AndroidAppBundle</summary>
      
    
    
    
    <category term="U3D" scheme="https://leolichenxi.github.io/categories/U3D/"/>
    
    
    <category term="AAB" scheme="https://leolichenxi.github.io/tags/AAB/"/>
    
  </entry>
  
  <entry>
    <title>优化记录 - 1</title>
    <link href="https://leolichenxi.github.io/2021/06/14/U3D/%E4%BC%98%E5%8C%96/"/>
    <id>https://leolichenxi.github.io/2021/06/14/U3D/%E4%BC%98%E5%8C%96/</id>
    <published>2021-06-14T04:00:00.000Z</published>
    <updated>2022-02-21T11:07:24.638Z</updated>
    
    <content type="html"><![CDATA[<p>优化的最终是希望代码占用内存小的同时执行效率高。</p><p>unity 分为CPU 和 GPU 优化</p><h1 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h1><h1 id="GPU"><a href="#GPU" class="headerlink" title="GPU"></a>GPU</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;优化的最终是希望代码占用内存小的同时执行效率高。&lt;/p&gt;
&lt;p&gt;unity 分为CPU 和 GPU 优化&lt;/p&gt;
&lt;h1 id=&quot;CPU&quot;&gt;&lt;a href=&quot;#CPU&quot; class=&quot;headerlink&quot; title=&quot;CPU&quot;&gt;&lt;/a&gt;CPU&lt;/h1&gt;&lt;h1 id=&quot;G</summary>
      
    
    
    
    <category term="U3D" scheme="https://leolichenxi.github.io/categories/U3D/"/>
    
    
    <category term="优化" scheme="https://leolichenxi.github.io/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Audio</title>
    <link href="https://leolichenxi.github.io/2021/06/14/U3D/%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/audio%E4%BC%98%E5%8C%96/"/>
    <id>https://leolichenxi.github.io/2021/06/14/U3D/%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/audio%E4%BC%98%E5%8C%96/</id>
    <published>2021-06-14T04:00:00.000Z</published>
    <updated>2022-02-21T11:07:47.100Z</updated>
    
    <content type="html"><![CDATA[<p>导入前的声音格式选择</p><pre><code> 短声音：.aifff和.wav长声音：.mp3和.ogg</code></pre><p>导入后的声音格式选择</p><pre><code> Force ToMono：如果启用，该音频将向下混合到单声道Load In Backgroud: 加载将在一个单独的线程上延迟的时间发生，而不会阻塞主线程Ambisonic: 如果音频文件包含有双声编码的音频，那么启用这个选项 LoadType: ①Decompress On Load:处理较小的声音（load就解压）                  ②Compressed In Memory：较大的声音（保持解压的状态）                  ③Streaming：使用最少的内存来缓冲压缩数据（很长的音乐）</code></pre><p> Compression Format：</p><pre><code>                 ①PCM  非常短的音效是最好的，质量高，文件大                 ②ADPCM大量噪音的声音，需要大量播放，比如脚步声，武器                 ③Vorbis/MP3 质量低，中等长度背景音乐                 ④HEVAG 类似于adpcm</code></pre><p>Preload Audio Data 预加载</p><p>方案：大点的音频: Streaming,不预加载，Vorbis</p><pre><code> 小点的音频DecompressOnLoad 不预加载  ，Vorbis</code></pre><p>会优化比较适中的cpu和内存，具体还要根据项目实际确定</p><h1 id="Unity性能优化-音频设置"><a href="#Unity性能优化-音频设置" class="headerlink" title="Unity性能优化-音频设置"></a>Unity性能优化-音频设置</h1><p>没想到Unity的音频会成为内存杀手，在实际的商业项目中，音频的优化必不可少。</p><ol><li><p>Unity支持许多不同的音频格式，但最终它将它们全部转换为首选格式。音频压缩格式有PCM、ADPCM、Vorbis，不是所有平台都支持这些所有的压缩格式，有些平台，例如WebGL只支持AAC格式。</p></li><li><p>所有音频导入时，默认两项设置，LoadType是”Decompress On Load”，压缩格式是“Vorbis”，例如下图原始文件大小计算为35.9 MB，导入的大小计算为10.7 MB。这意味着这个音频剪辑将使您的游戏（存档）大小增加10兆字节，但播放它需要近36兆字节的RAM。</p></li></ol><p>These are default import settings.</p><ol start="3"><li>Load Type的各个选项</li></ol><p>Compressed In Memory – 音频剪辑将存储在RAM中，播放时将解压缩，播放时不需要额外的存储。<br>Streaming –音频永久存在设备上(硬盘或闪存上) ，播放流媒体方式. 不需要RAM进行存储或播放。<br>Decompress On Load – 未压缩的音频将存储在RAM中。这个选项需要的内存最多，但是播放它不会像其他选项那样需要太多的CPU电源。<br>         怎么选？长音频播放消耗大量内存，如果播放时不想在内存中进行解压，有两个选择：</p><pre><code>     （1）Load Type选“Streaming”， Compression Format 选”Vorbis&quot;，使用最少的内存，但需要更多的CPU电量和硬盘I/O操作；     （2）Load Type选“Compressed In Memory”， Compression Format 选”Vorbis&quot;，磁盘I/O操作被替换成内存的消耗，请注意，要调整“Quaility”滑块以减小压缩剪辑的大小，以交换音质，一般推荐70%左右。         一般是看到底音乐占据多少内存以及你的目标机型是什么样子的，如果音乐占据的内存本身比较高，你的目标机型的内存又比较小，那么就选择第二种，这种方案会卡一点，否则选择第一种就更好</code></pre><ol start="4"><li><p>声音特效</p><p>  （1）对于经常播放的和短的音频剪辑，使用“Decompress On Load”和“PCM或ADPCM”压缩格式。当选择PCM时，不需要解压缩，如果音频剪辑很短，它将很快加载。你也可以使用ADPCM。它需要解压，但解压比Vorbis快得多。</p><p>   （2）对于经常播放，中等大小的音频剪辑使用”Compressed In Memory“和”ADPCM“压缩格式，比原始PCM小3.5倍，解压算法的CPU消耗量不会像vorbis消耗那么多CPU。</p><p>   （3）对于很少播放并且长度比较短的声音剪辑，使用”Compressed In Memory”, ADPCM 这种压缩格式,原因同（2）。</p><p>  （4）对于很少播放中等大小的音频，使用”Compressed In Memory“ 和Vorbis压缩格式。这个音频可能太长，无法使用adpcm存储，播放太少，因此解压缩所需的额外CPU电量不会太多。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;导入前的声音格式选择&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 短声音：.aifff和.wav

长声音：.mp3和.ogg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;导入后的声音格式选择&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; Force ToMono：如果启用，该音频将向下混合到单声道

Loa</summary>
      
    
    
    
    <category term="U3D" scheme="https://leolichenxi.github.io/categories/U3D/"/>
    
    
    <category term="资源" scheme="https://leolichenxi.github.io/tags/%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>Lua 内存 和 GC</title>
    <link href="https://leolichenxi.github.io/2021/06/14/Lua/lua%E5%86%85%E5%AD%98/"/>
    <id>https://leolichenxi.github.io/2021/06/14/Lua/lua%E5%86%85%E5%AD%98/</id>
    <published>2021-06-14T04:00:00.000Z</published>
    <updated>2022-02-06T10:32:43.864Z</updated>
    
    <content type="html"><![CDATA[<h2 id><a href="#" class="headerlink" title></a></h2><p>1 byte (B 字节) = 8 bits (b 比特位，0或1)<br>1 KB = 1024 (2^10) byte<br>1MB = 1024 KB<br>1GB = 1024 MB<br>1TB = 1024 GB<br>##</p><h2 id="基础数据类型"><a href="#基础数据类型" class="headerlink" title="基础数据类型"></a>基础数据类型</h2><ol><li>number 实数，可以是整数，浮点数</li><li>string 字符串，一旦赋值不能被修改，可以通过方法string.gsub()来修改</li><li>nil 全局变量没被赋值默认为nil，删除变量酒赋值为nil</li><li>boolean false 和 nil为假，其它都为真</li><li>function函数</li><li>table 数组，容器</li><li>userdata (类，其它语言转换过来就变成userdata类)</li><li>thread 线程</li></ol><h2 id="Lua-GC"><a href="#Lua-GC" class="headerlink" title="Lua GC"></a>Lua GC</h2><blockquote><p>在Lua5.1后，lua采用分布回收以及三色增量标记清除算法，基本原里：</p></blockquote><ul><li>每个新创建的对象设置为白色</li><li>遍历root节点中引用的对象，从白色置为灰色，并且放入到灰色节点链表中</li><li>从灰色链表中取未扫描到的对象，将其置为黑色，遍历这个对象关联的其他所有对象：如果为白色，则标记为灰色并加入到灰色链表中</li><li>遍历所有对象，如果是白色，执行灰色，否则塞入到对象链表中，等待下一轮GC</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;1 byte (B 字节) = 8 bits (b 比特位，0或1)&lt;br&gt;1 KB = 1024 (2^10) byte&lt;br&gt;1MB = 1024 KB&lt;br&gt;1G</summary>
      
    
    
    
    <category term="lua" scheme="https://leolichenxi.github.io/categories/lua/"/>
    
    
    <category term="lua" scheme="https://leolichenxi.github.io/tags/lua/"/>
    
  </entry>
  
  <entry>
    <title>ADB调试</title>
    <link href="https://leolichenxi.github.io/2021/06/14/U3D/ADB%E8%B0%83%E8%AF%95/"/>
    <id>https://leolichenxi.github.io/2021/06/14/U3D/ADB%E8%B0%83%E8%AF%95/</id>
    <published>2021-06-14T04:00:00.000Z</published>
    <updated>2022-02-21T11:10:56.849Z</updated>
    
    <content type="html"><![CDATA[<h2 id="adb-链接设备"><a href="#adb-链接设备" class="headerlink" title="adb 链接设备"></a>adb 链接设备</h2><p>adb connect 127.0.0.1:62001</p><h2 id="查看设备链接"><a href="#查看设备链接" class="headerlink" title="查看设备链接"></a>查看设备链接</h2><p>adb devices</p><h2 id="查看内存"><a href="#查看内存" class="headerlink" title="查看内存"></a>查看内存</h2><p>adb shell top | grep app_name<br>adb shell top | grep com.bilibili.hcshjxaz</p><h2 id="链接Unity"><a href="#链接Unity" class="headerlink" title="链接Unity"></a>链接Unity</h2><p>adb forward tcp:34999 localabstract:包名</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;adb-链接设备&quot;&gt;&lt;a href=&quot;#adb-链接设备&quot; class=&quot;headerlink&quot; title=&quot;adb 链接设备&quot;&gt;&lt;/a&gt;adb 链接设备&lt;/h2&gt;&lt;p&gt;adb connect 127.0.0.1:62001&lt;/p&gt;
&lt;h2 id=&quot;查看设备链接</summary>
      
    
    
    
    <category term="U3D" scheme="https://leolichenxi.github.io/categories/U3D/"/>
    
    
    <category term="工具" scheme="https://leolichenxi.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>AssetBundle优化</title>
    <link href="https://leolichenxi.github.io/2021/06/14/U3D/%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/Assetbundle%E4%BC%98%E5%8C%96/"/>
    <id>https://leolichenxi.github.io/2021/06/14/U3D/%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/Assetbundle%E4%BC%98%E5%8C%96/</id>
    <published>2021-06-14T04:00:00.000Z</published>
    <updated>2022-02-21T11:08:03.545Z</updated>
    
    <content type="html"><![CDATA[<h2 id><a href="#" class="headerlink" title></a></h2><p>1.一.BuildAssetBundleOption.DisableWriteTypeTree 关闭</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;1.一.BuildAssetBundleOption.DisableWriteTypeTree 关闭&lt;/p&gt;
</summary>
      
    
    
    
    <category term="U3D" scheme="https://leolichenxi.github.io/categories/U3D/"/>
    
    
    <category term="资源" scheme="https://leolichenxi.github.io/tags/%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Pure主题设置记录</title>
    <link href="https://leolichenxi.github.io/2021/06/11/Hexo/Hexo-Pure-%E8%AE%BE%E7%BD%AE/"/>
    <id>https://leolichenxi.github.io/2021/06/11/Hexo/Hexo-Pure-%E8%AE%BE%E7%BD%AE/</id>
    <published>2021-06-11T05:43:00.000Z</published>
    <updated>2023-01-05T07:13:15.001Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Pure-设置记录"><a href="#Pure-设置记录" class="headerlink" title="Pure 设置记录"></a>Pure 设置记录</h1><p>新电脑环境设置：<br><a href="https://github.com/cofess/hexo-theme-pure/blob/master/README.cn.md">文档地址</a></p><h3 id="背景动态设置"><a href="#背景动态设置" class="headerlink" title="背景动态设置"></a>背景动态设置</h3><p><a href="https://link.csdn.net/?target=https://github.com/hustcc/canvas-nest.js">背景动画</a> 基于canvas，在\themes\pure\layout\layout.ejs的body中面添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="gitcommet-设置"><a href="#gitcommet-设置" class="headerlink" title="gitcommet 设置"></a>gitcommet 设置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">comment:</span><br><span class="line">  type: gitment  # 启用哪种评论系统</span><br><span class="line">  # disqus:  # enter disqus shortname here</span><br><span class="line">  # youyan: </span><br><span class="line">  #   uid: 2kLH6P3hQG2bNQQ9a9mwRFmd-gzGzoHsz # enter youyan uid </span><br><span class="line">  # livere:</span><br><span class="line">  #   uid: # enter youyan uid </span><br><span class="line">  gitment:</span><br><span class="line">    githubID: githubname</span><br><span class="line">    repo: githubname.github.io</span><br><span class="line">    ClientID: id</span><br><span class="line">    ClientSecret: secrectid</span><br><span class="line">    lazy: false</span><br></pre></td></tr></table></figure><h3 id="访问数设置"><a href="#访问数设置" class="headerlink" title="访问数设置"></a>访问数设置</h3><p>footer.ejs脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;footer class=&quot;footer&quot; itemscope itemtype=&quot;http://schema.org/WPFooter&quot;&gt;</span><br><span class="line">&lt;%- partial(&#x27;_common/social&#x27;, null, &#123;cache: !config.relative_link&#125;) %&gt;</span><br><span class="line">    &lt;div class=&quot;copyright&quot;&gt;</span><br><span class="line">    &lt;% if(theme.site.copyright) &#123; %&gt;</span><br><span class="line">        &amp;copy; &lt;%= date(new Date(), &#x27;YYYY&#x27;) %&gt; &lt;%= config.author || config.title %&gt;</span><br><span class="line">        &lt;% &#125; %&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;span &gt;本站总访问量: &lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次&lt;/span&gt;</span><br><span class="line">&lt;/footer&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Pure-设置记录&quot;&gt;&lt;a href=&quot;#Pure-设置记录&quot; class=&quot;headerlink&quot; title=&quot;Pure 设置记录&quot;&gt;&lt;/a&gt;Pure 设置记录&lt;/h1&gt;&lt;p&gt;新电脑环境设置：&lt;br&gt;&lt;a href=&quot;https://github.com/co</summary>
      
    
    
    
    <category term="Hexo" scheme="https://leolichenxi.github.io/categories/Hexo/"/>
    
    
    <category term="pure" scheme="https://leolichenxi.github.io/tags/pure/"/>
    
  </entry>
  
  <entry>
    <title>1.UE4-安装-Rider for Unreal Engine</title>
    <link href="https://leolichenxi.github.io/2021/06/11/UE4/1.UE4-%E5%AE%89%E8%A3%85-Rider%20for%20Unreal%20Engine/"/>
    <id>https://leolichenxi.github.io/2021/06/11/UE4/1.UE4-%E5%AE%89%E8%A3%85-Rider%20for%20Unreal%20Engine/</id>
    <published>2021-06-11T05:43:00.000Z</published>
    <updated>2021-06-11T15:35:21.353Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装UE4"><a href="#安装UE4" class="headerlink" title="安装UE4"></a>安装UE4</h1><p>教程比较多，自行搜索</p><p>个人安装的：</p><table><thead><tr><th>UE4版本</th><th>4.24.3</th></tr></thead><tbody><tr><td>IDE</td><td>Rider for Unreal Engine</td></tr></tbody></table><h3 id="安装后找到此插件"><a href="#安装后找到此插件" class="headerlink" title="安装后找到此插件"></a>安装后找到此插件</h3><p><img src="/images/assets/png/1.png" alt="安装"></p><p>安装 Rider for Unreal Engine；</p><h2 id="安装后修改配置"><a href="#安装后修改配置" class="headerlink" title="安装后修改配置"></a>安装后修改配置</h2><ol><li><p>修改Rider缓存目录：<br>Rider for Unreal Engine 2021.1.1\bin 文件夹下idea.properties文件 <img src="/images/assets/png/2.png" alt="安装Rider"></p></li><li><p>修改ue4缓存目录 <img src="/images/assets/png/3.png" alt="修改缓存"><br>用记事本打开它，然后搜索InstalledDerivedDataBackendGraph并找到%ENGINEVERSIONAGNOSTICUSERDIR%DerivedDataCache把它改为%GAMEDIR%DerivedDataCache</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装UE4&quot;&gt;&lt;a href=&quot;#安装UE4&quot; class=&quot;headerlink&quot; title=&quot;安装UE4&quot;&gt;&lt;/a&gt;安装UE4&lt;/h1&gt;&lt;p&gt;教程比较多，自行搜索&lt;/p&gt;
&lt;p&gt;个人安装的：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;UE4版</summary>
      
    
    
    
    <category term="UE4" scheme="https://leolichenxi.github.io/categories/UE4/"/>
    
    
    <category term="UE4" scheme="https://leolichenxi.github.io/tags/UE4/"/>
    
  </entry>
  
  <entry>
    <title>Hexo使用记录</title>
    <link href="https://leolichenxi.github.io/2021/06/11/Hexo/Hexo%E4%BD%BF%E7%94%A8/"/>
    <id>https://leolichenxi.github.io/2021/06/11/Hexo/Hexo%E4%BD%BF%E7%94%A8/</id>
    <published>2021-06-11T05:43:00.000Z</published>
    <updated>2021-06-11T15:36:08.184Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-安装记录"><a href="#Hexo-安装记录" class="headerlink" title="Hexo 安装记录"></a>Hexo 安装记录</h1><p>[地址文档] (<a href="https://hexo.io/zh-cn">https://hexo.io/zh-cn</a>)</p><h3 id="markdown-图片测试问题"><a href="#markdown-图片测试问题" class="headerlink" title="markdown 图片测试问题"></a>markdown 图片测试问题</h3><blockquote><p>在写.md文档时，采用在source 目录下新建个images文件夹。引用图片直接 (/images/图片名)</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Hexo-安装记录&quot;&gt;&lt;a href=&quot;#Hexo-安装记录&quot; class=&quot;headerlink&quot; title=&quot;Hexo 安装记录&quot;&gt;&lt;/a&gt;Hexo 安装记录&lt;/h1&gt;&lt;p&gt;[地址文档] (&lt;a href=&quot;https://hexo.io/zh-cn&quot;&gt;ht</summary>
      
    
    
    
    <category term="Hexo" scheme="https://leolichenxi.github.io/categories/Hexo/"/>
    
    
    <category term="hexo" scheme="https://leolichenxi.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>UE4-踩坑记录</title>
    <link href="https://leolichenxi.github.io/2021/06/11/UE4/0.UE4-%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    <id>https://leolichenxi.github.io/2021/06/11/UE4/0.UE4-%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</id>
    <published>2021-06-11T05:43:00.000Z</published>
    <updated>2021-06-11T07:45:33.527Z</updated>
    
    
    
    
    <category term="UE4" scheme="https://leolichenxi.github.io/categories/UE4/"/>
    
    
    <category term="UE4" scheme="https://leolichenxi.github.io/tags/UE4/"/>
    
  </entry>
  
</feed>
